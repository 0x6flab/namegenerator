import textwrap
import os


class NameGenerator:
    FEMALE_FILE = "https://www.cs.cmu.edu/afs/cs/project/ai-repository/ai/areas/nlp/corpora/names/female.txt"
    MALE_FILE = "https://www.cs.cmu.edu/afs/cs/project/ai-repository/ai/areas/nlp/corpora/names/male.txt"
    FAM_FILE = "https://www.cs.cmu.edu/afs/cs/project/ai-repository/ai/areas/nlp/corpora/names/other/family.txt"
    NAMES_FILE = "https://www.cs.cmu.edu/afs/cs/project/ai-repository/ai/areas/nlp/corpora/names/other/names.txt"
    TEMP_FAM_FILE = "./family.txt"
    TEMP_FEMALE_FILE = "./female.txt"
    TEMP_MALE_FILE = "./male.txt"
    TEMP_NAMES_FILE = "./names.txt"
    GO_FILE = "./names.go"

    def __init__(self):
        self.family_names = []
        self.female_names = []
        self.male_names = []
        self.all_names = []

    def download_files(self):
        """
        `download_files` downloads the files from the internet

        Args:
            None

        Returns:
            None
        """
        files = f"{self.FAM_FILE} {self.FEMALE_FILE} {self.MALE_FILE} {self.NAMES_FILE}"
        os.system(f'wget --no-verbose {files}')

    def read_files(self):
        """
        `read_files` reads the files and returns the names

        Args:
            None

        Returns:
            None
        """
        with open(self.TEMP_FAM_FILE, "r+") as familyfile:
            family_names = [line.strip().replace(" ", "-")
                            for line in familyfile]
        self.family_names = list(set(family_names))

        with open(self.TEMP_FEMALE_FILE, "r+") as femalefile:
            female_names = [line.strip().replace(" ", "-")
                            for line in femalefile]
        self.female_names = list(set(female_names[6:]))

        with open(self.TEMP_MALE_FILE, "r+") as malefile:
            male_names = [line.strip().replace(" ", "-") for line in malefile]
        self.male_names = list(set(male_names[6:]))

        with open(self.TEMP_NAMES_FILE, "r+") as namesfile:
            all_names = [line.strip().replace(" ", "-") for line in namesfile]
        self.all_names = list(set(all_names))

    def print_summary(self):
        """
        `print_summary` prints the summary of the names

        Args:
            None

        Returns:
            None
        """
        print(f"""Number of female names is {len(self.female_names)}\n
        Number of male names is {len(self.male_names)}\n
        Number of family names is {len(self.family_names)}\n
        Number of general names is {len(self.all_names)}\n""")

    def write_go_file(self):
        """
        `write_go_file` writes the go file

        Args:
            None

        Returns:
            None
        """
        family_var = "FamilyNames = []string{\"" + \
            "\", \"".join(self.female_names) + "\"}"
        wrapped_family_text = textwrap.wrap(
            family_var, width=100, break_on_hyphens=False, break_long_words=False
        )

        female_var = "FemaleNames = []string{\"" + \
            "\", \"".join(self.female_names) + "\"}"
        wrapped_female_text = textwrap.wrap(
            female_var, width=100, break_on_hyphens=False, break_long_words=False
        )

        male_var = "MaleNames = []string{\"" + \
            "\", \"".join(self.male_names) + "\"}"
        wrapped_male_text = textwrap.wrap(
            male_var, width=100, break_on_hyphens=False, break_long_words=False
        )

        general_var = "GeneralNames = []string{\"" + \
            "\", \"".join(self.all_names) + "\"}"
        wrapped_general_text = textwrap.wrap(
            general_var, width=100, break_on_hyphens=False, break_long_words=False
        )

        with open(self.GO_FILE, "w") as f:
            f.write("// Copyright (c) 0x6flab. All rights reserved.\n// \n")
            f.write("// SPDX-License-Identifier: GNU GENERAL PUBLIC LICENSE\n\n")

            f.write("// Code generated by namegenerator.py. DO NOT EDIT.\n\n")
            f.write("package namegenerator\n")
            f.write("var (\n")
            f.write("// FamilyNames is a list of family names\n")
            for line in wrapped_family_text:
                f.write(line + "\n")
            f.write("\n// FemaleNames is a list of female names\n")
            for line in wrapped_female_text:
                f.write(line + "\n")
            f.write("\n// MaleNames is a list of male names\n")
            for line in wrapped_male_text:
                f.write(line + "\n")
            f.write("\n// GeneralNames is a list of general names\n")
            for line in wrapped_general_text:
                f.write(line + "\n")
            f.write(")")

    def remove_files(self):
        """
        `remove_files` removes the temporary files

        Args:
            None

        Returns:
            None
        """
        os.remove(self.TEMP_FAM_FILE)
        os.remove(self.TEMP_FEMALE_FILE)
        os.remove(self.TEMP_MALE_FILE)
        os.remove(self.TEMP_NAMES_FILE)

    def run(self):
        """
        `run` runs the namegenerator. It downloads the files, reads the files,
        prints the summary, writes the go file and removes the temporary files.

        Args:
            None

        Returns:
            None
        """
        self.download_files()
        self.read_files()
        self.print_summary()
        self.write_go_file()
        self.remove_files()


def main():
    """
    Runs the namegenerator.
    """
    namegenerator = NameGenerator()
    namegenerator.run()


if __name__ == "__main__":
    main()
